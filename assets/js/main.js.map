{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/synesim/color-map.js","main.js","lib/synesim/css-generator.js","lib/synesim/graphemes.js","lib/synesim/html-generator.js","lib/util/query.js","node_modules/underscore/underscore.js","src/assets/js/audit.js","src/assets/js/main.js","src/assets/js/synesim/color-map-editor.directive.js","src/assets/js/synesim/color-map-editor.html","src/assets/js/synesim/color-map-local.service.js","src/assets/js/synesim/color-map-preview.directive.js","src/assets/js/synesim/color-map-preview.html","src/assets/js/synesim/color-map-remote.service.js","src/assets/js/synesim/main.html","src/assets/js/synesim/synesim.config.js","src/assets/js/synesim/synesim.controller.js","src/assets/js/synesim/synesim.module.js","src/assets/js/synesim/synesim.run.js","src/assets/js/synesim/synesim.service.js","src/assets/js/synesim/text-default.html","src/assets/js/synesim/text-editor.directive.js","src/assets/js/synesim/text-editor.html","src/assets/js/synesim/text-renderer.directive.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var _ = require('underscore');\nvar graphemes = require('./graphemes');\n\nfunction ColorMap() {\n\tthis.graphemes = graphemes;\n\t_.each(graphemes, function(grapheme) {\n\t\tthis[grapheme] = '#000000';\n\t}, this);\n}\n\n_.extend(ColorMap, {\n\tfromData: fromData\n});\n\nColorMap.prototype = {\n\tcolor: color,\n\ttoData: toData\n};\n\n// STATIC METHODS\n\nfunction fromData(data) {\n\tvar colorMap = new ColorMap();\n\t_.each(data, function(color, grapheme) {\n\t\tcolorMap.color(grapheme, color);\n\t});\n\treturn colorMap;\n}\n\n// INSTANCE METHODS\n\nfunction color(grapheme, color) {\n\tgrapheme = grapheme.toUpperCase();\n\tif (color) {\n\t\tif (!_isValidColor(color)) {\n\t\t\tthrow new Error('invalid color');\n\t\t}\n\t\tif (graphemes.indexOf(grapheme) < 0) {\n\t\t\tthrow new Error('invalid grapheme');\n\t\t}\n\t\tthis[grapheme] = color;\n\t}\n\treturn this[grapheme];\n}\n\nfunction toData() {\n\treturn _.chain(this.graphemes)\n\t\t.map(function(grapheme) {\n\t\t\treturn [grapheme, this.color(grapheme)]\n\t\t}, this)\n\t\t.object()\n\t\t.value();\n}\n\nfunction _isValidColor(value) {\n\tvar pattern = /^#[A-F0-9]{6}$/i;\n\treturn pattern.test(value);\n}\n\nmodule.exports = ColorMap;","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar _ = require('underscore');\nvar graphemes = require('./graphemes');\n\nfunction ColorMap() {\n\tthis.graphemes = graphemes;\n\t_.each(graphemes, function(grapheme) {\n\t\tthis[grapheme] = '#000000';\n\t}, this);\n}\n\n_.extend(ColorMap, {\n\tfromData: fromData\n});\n\nColorMap.prototype = {\n\tcolor: color,\n\ttoData: toData\n};\n\n// STATIC METHODS\n\nfunction fromData(data) {\n\tvar colorMap = new ColorMap();\n\t_.each(data, function(color, grapheme) {\n\t\tcolorMap.color(grapheme, color);\n\t});\n\treturn colorMap;\n}\n\n// INSTANCE METHODS\n\nfunction color(grapheme, color) {\n\tgrapheme = grapheme.toUpperCase();\n\tif (color) {\n\t\tif (!_isValidColor(color)) {\n\t\t\tthrow new Error('invalid color');\n\t\t}\n\t\tif (graphemes.indexOf(grapheme) < 0) {\n\t\t\tthrow new Error('invalid grapheme');\n\t\t}\n\t\tthis[grapheme] = color;\n\t}\n\treturn this[grapheme];\n}\n\nfunction toData() {\n\treturn _.chain(this.graphemes)\n\t\t.map(function(grapheme) {\n\t\t\treturn [grapheme, this.color(grapheme)]\n\t\t}, this)\n\t\t.object()\n\t\t.value();\n}\n\nfunction _isValidColor(value) {\n\tvar pattern = /^#[A-F0-9]{6}$/i;\n\treturn pattern.test(value);\n}\n\nmodule.exports = ColorMap;\n},{\"./graphemes\":3,\"underscore\":6}],2:[function(require,module,exports){\nvar _ = require('underscore');\n\nfunction CssGenerator(colorMap, options) {\n\tif (!colorMap) {\n\t\tthrow new Error('CssGenerator must be instantiated with a ColorMap');\n\t}\n\tthis.colorMap = colorMap;\n\tthis.options = _.clone(options || {});\n\t_.defaults(this.options, {\n\t\tclassPrefix: ''\n\t});\n}\n\nCssGenerator.prototype = {\n\tgenerate: generate\n}\n\nfunction generate() {\n\treturn _.map(this.colorMap.graphemes, function(grapheme) {\n\t\tvar className = this.options.classPrefix + grapheme.toLowerCase();\n\t\treturn [\n\t\t\t'.' + className + '{',\n\t\t\t'color:' + this.colorMap.color(grapheme) + ';',\n\t\t\t'}\\n'\n\t\t].join('');\n\t}, this).join('');\n}\n\nmodule.exports = CssGenerator;\n},{\"underscore\":6}],3:[function(require,module,exports){\nvar GRAPHEME_STRING = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\nmodule.exports = GRAPHEME_STRING.split('');\n},{}],4:[function(require,module,exports){\nvar _ = require('underscore');\n\nfunction HtmlGenerator(colorMap, options) {\n\tif (!colorMap) {\n\t\tthrow new Error('HtmlGenerator must be constructed with a ColorMap');\n\t}\n\tthis.colorMap = colorMap;\n\tthis.options = _.clone(options || {});\n\t_.defaults(this.options, {\n\t\tclassPrefix: ''\n\t});\n}\n\nHtmlGenerator.prototype = {\n\tgenerate: generate\n}\n\nfunction generate(text) {\n\treturn _.map(text.split(''), function(char) {\n\t\tif (this.colorMap.color(char)) {\n\t\t\tvar cssClass = this.options.classPrefix + char.toLowerCase();\n\t\t\treturn '<span class=\"' + cssClass + '\">' + char + '</span>';\n\t\t} else {\n\t\t\treturn char;\n\t\t}\n\t}, this).join('');\n}\n\nmodule.exports = HtmlGenerator;\n},{\"underscore\":6}],5:[function(require,module,exports){\n/**\n * Returns query string as object\n */\nfunction query() {\n\tvar qs = window.location.search;\n\tvar obj = {};\n\tif (qs && qs.length > 0) {\n\t\tqs = qs.substring(1); // remove initial '?'\n\t\tvar parts = qs.split('&');\n\t\tparts.forEach(function(part) {\n\t\t\tvar pair = part.split('=');\n\t\t\tobj[pair[0]] = pair[1];\n\t\t});\n\t}\n\treturn obj;\n}\n\nmodule.exports = query;\n},{}],6:[function(require,module,exports){\n//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n},{}],7:[function(require,module,exports){\nvar audit = {\n\tlog: log\n};\n\nfunction log() {\n\tconsole.log('navigator properties:');\n\tconsole.log('* userAgent:', navigator.userAgent);\n\tconsole.log('* platform:', navigator.platform);\n\tconsole.log('* language:', navigator.language);\n}\n\nmodule.exports = audit;\n},{}],8:[function(require,module,exports){\nvar query = require('util/query'); // include from \"lib\"\nvar audit = require('./audit'); // include locally\n\n// If the query string includes the parameter \"audit\", then write navigator information to console.\nvar q = query();\nif (q.audit) {\n\taudit.log();\n}\n\nrequire('./synesim/synesim.module');\n},{\"./audit\":7,\"./synesim/synesim.module\":18,\"util/query\":5}],9:[function(require,module,exports){\nangular.module('synesim')\n\t.directive('synesimColorMapEditor', function(synesim) {\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: require('./color-map-editor.html'),\n\t\t\tscope: {\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t}\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\n\t\t\tscope.$watch('colorMap', function() {\n\t\t\t\t_setCode();\n\t\t\t});\n\n\t\t\tscope.selectGrapheme = function selectGrapheme(grapheme) {\n\t\t\t\tscope.selectedGrapheme = grapheme;\n\t\t\t\tscope.selectedColor = scope.colorMap.color(grapheme);\n\t\t\t};\n\n\t\t\tscope.deselectGrapheme = function deselectGrapheme() {\n\t\t\t\tscope.selectedGrapheme = null;\n\t\t\t\tscope.selectedColor = null;\n\t\t\t\tif (scope.colorMap) {\n\t\t\t\t\tsynesim.colorMap(scope.colorMap);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscope.$watch('selectedColor', function() {\n\t\t\t\tif (scope.selectedColor && scope.selectedGrapheme && scope.colorMap) {\n\t\t\t\t\tscope.colorMap.color(scope.selectedGrapheme, scope.selectedColor);\n\t\t\t\t\t_setCode();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction _setCode() {\n\t\t\t\tif (scope.colorMap) {\n\t\t\t\t\tvar data = scope.colorMap.toData();\n\t\t\t\t\tscope.code = JSON.stringify(data);\n\t\t\t\t} else {\n\t\t\t\t\tscope.code = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t});\n},{\"./color-map-editor.html\":10}],10:[function(require,module,exports){\nmodule.exports = '<div class=\"color-map-editor\">\\n\t<ul class=\"graphemes\">\\n\t\t<li class=\"grapheme\" \\n\t\t\tng-repeat=\"grapheme in colorMap.graphemes\" \\n\t\t\tng-click=\"selectGrapheme(grapheme)\"\\n\t\t\tng-bind=\"grapheme\"\\n\t\t\tng-style=\"{\\n\t\t\t\tcolor: colorMap.color(grapheme)\\n\t\t\t}\"\\n\t\t\t></li>\\n\t</ul>\\n\t<div class=\"dialog\" ng-show=\"selectedGrapheme\">\\n\t\t<div class=\"dialog__panel\">\\n\t\t\t<color-picker ng-model=\"selectedColor\"></color-picker>\\n\t\t\t<span class=\"grapheme\" \\n\t\t\t\tng-bind=\"selectedGrapheme\"\\n\t\t\t\tng-style=\"{\\n\t\t\t\t\tcolor: selectedColor\\n\t\t\t\t}\"\\n\t\t\t\t></span>\\n\t\t</div>\\n\t\t<button class=\"close\" ng-click=\"deselectGrapheme()\">close</button>\\n\t</div>\\n\t<p>Code:</p>\\n\t<textarea readonly class=\"code\" ng-bind=\"code\"></textarea>\\n\t\\n</div>';\n},{}],11:[function(require,module,exports){\nvar ColorMap = require('synesim/color-map');\n\nangular.module('synesim')\n\t.service('colorMapLocal', function() {\n\n\t\tthis.read = read;\n\t\tthis.write = write;\n\n\t\t/**\n\t\t * Reads the color map from local storage.\n\t\t * @return {ColorMap} The local color map\n\t\t */\n\t\tfunction read() {\n\t\t\treturn localStorage.colorMap ? ColorMap.fromData(JSON.parse(localStorage.colorMap)) : null;\n\t\t}\n\n\t\t/**\n\t\t * Writes the color map to local storage.\n\t\t */\n\t\tfunction write(colorMap) {\n\t\t\tlocalStorage.colorMap = JSON.stringify(colorMap.toData());\n\t\t}\n\n\t});\n},{\"synesim/color-map\":1}],12:[function(require,module,exports){\nangular.module('synesim')\n\t.directive('synesimColorMapPreview', function() {\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: require('./color-map-preview.html'),\n\t\t\tscope: {\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t};\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\n\t\t}\n\n\t});\n},{\"./color-map-preview.html\":13}],13:[function(require,module,exports){\nmodule.exports = '<div class=\"color-map-preview\">\\n\\n<ul>\\n<li ng-repeat=\"grapheme in colorMap.graphemes\">\\n\t<span ng-bind=\"grapheme\"\\n\t\tng-style=\"{\\n\t\t\tcolor: colorMap.color(grapheme)\\n\t\t}\"\\n\t></span>\\n</li>\\n</ul>\\n\\n</div>';\n},{}],14:[function(require,module,exports){\nvar ColorMap = require('synesim/color-map');\n\nangular.module('synesim')\n\t.service('colorMapRemote', function($q, $http) {\n\n\t\tthis.read = read;\n\n\t\t/**\n\t\t * Reads the color map data from remote resource.\n\t\t * @return {Promise} The promise resolving to ColorMap\n\t\t */\n\t\tfunction read() {\n\t\t\tif (!this.endpoint) {\n\t\t\t\treturn $q.reject(new Error('unable to read remote color map data without endpoint'));\n\t\t\t}\n\t\t\treturn $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: this.endpoint,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\taccept: 'application/json'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(function(r) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn ColorMap.fromData(r.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn $q.reject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t})\n},{\"synesim/color-map\":1}],15:[function(require,module,exports){\nmodule.exports = '<h1>Synesthesia Simulator</h1>\\n\\n<nav>\\n\t<ul>\\n\t\t<li>\\n\t\t\t<a ui-sref=\"main.text-editor\"\\n\t\t\t\tui-sref-active-eq=\"active\"\\n\t\t\t\t>edit text</a>\\n\t\t</li>\\n\t\t<li>\\n\t\t\t<a ui-sref=\"main.color-editor\" \\n\t\t\t\tui-sref-active-eq=\"active\"\\n\t\t\t\t>edit colors</a>\\n\t\t</li>\\n\t</ul>\\n</nav>\\n\\n<ui-view>\\n\t<synesim-color-map-preview\\n\t\tcolor-map=\"colorMap\"\\n\t></synesim-color-map-preview>\\n</ui-view>\\n';\n},{}],16:[function(require,module,exports){\nvar _ = require('underscore');\n\nangular.module('synesim')\n\t.config(function($provide, $logProvider, $urlRouterProvider, $stateProvider) {\n\n\t\t//$logProvider.debugEnabled(false);\n\n\t\t$provide.decorator('synesim', function($delegate) {\n\t\t\treturn _.extend($delegate, {\n\t\t\t\ttext: require('./text-default.html')\n\t\t\t});\n\t\t});\n\n\t\t$provide.decorator('colorMapRemote', function($delegate) {\n\t\t\treturn _.extend($delegate, {\n\t\t\t\tendpoint: '/assets/misc/json/color-map.json',\n\t\t\t});\n\t\t});\n\n\t\t$stateProvider\n\t\t\t.state('main', {\n\t\t\t\turl: '/',\n\t\t\t\ttemplate: require('./main.html'),\n\t\t\t\tcontroller: 'synesimController'\n\t\t\t})\n\t\t\t.state('main.color-editor', {\n\t\t\t\turl: 'color-editor',\n\t\t\t\ttemplate: '<synesim-color-map-editor color-map=\"colorMap\"></synesim-color-map-editor>'\n\t\t\t})\n\t\t\t.state('main.text-editor', {\n\t\t\t\turl: 'text-editor',\n\t\t\t\ttemplate: '<synesim-text-editor color-map=\"colorMap\"></synesim-text-editor>'\n\t\t\t});\n\n\t\t$urlRouterProvider.otherwise('/text-editor');\n\n\t});\n},{\"./main.html\":15,\"./text-default.html\":21,\"underscore\":6}],17:[function(require,module,exports){\nangular.module('synesim')\n\t.controller('synesimController', function($log, $scope, synesim) {\n\n\t\tsynesim.colorMap()\n\t\t\t.then(function(r) {\n\t\t\t\t$scope.colorMap = r;\n\t\t\t}, function(e) {\n\t\t\t\t$log.error('unable to load color map', e);\n\t\t\t});\n\n\t});\n},{}],18:[function(require,module,exports){\nangular.module('synesim', ['ui.router', 'mp.colorPicker']);\n\nrequire('./synesim.config');\nrequire('./synesim.run');\nrequire('./synesim.controller');\nrequire('./synesim.service');\nrequire('./color-map-remote.service');\nrequire('./color-map-local.service');\nrequire('./color-map-preview.directive');\nrequire('./color-map-editor.directive');\nrequire('./text-renderer.directive');\nrequire('./text-editor.directive');\n},{\"./color-map-editor.directive\":9,\"./color-map-local.service\":11,\"./color-map-preview.directive\":12,\"./color-map-remote.service\":14,\"./synesim.config\":16,\"./synesim.controller\":17,\"./synesim.run\":19,\"./synesim.service\":20,\"./text-editor.directive\":22,\"./text-renderer.directive\":24}],19:[function(require,module,exports){\nangular.module('synesim')\n\t.run(function($log) {\n\t\t$log.debug('synesim');\n\t})\n},{}],20:[function(require,module,exports){\nvar ColorMap = require('synesim/color-map');\n\nangular.module('synesim')\n\t.service('synesim', function($q, colorMapRemote, colorMapLocal) {\n\n\t\tthis.colorMap = colorMap;\n\n\t\tfunction colorMap(value) {\n\t\t\tif (value) {\n\t\t\t\tcolorMapLocal.write(value);\n\t\t\t}\n\t\t\tvar localValue = colorMapLocal.read();\n\t\t\tif (localValue) {\n\t\t\t\treturn $q.when(localValue);\n\t\t\t} else {\n\t\t\t\treturn colorMapRemote.read()\n\t\t\t\t\t.then(function(r) {\n\t\t\t\t\t\tcolorMapLocal.write(r);\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t});\n},{\"synesim/color-map\":1}],21:[function(require,module,exports){\nmodule.exports = 'Grapheme-color synesthesia is a condition causing a person to experience each symbol (character of the alphabet and digit) as though it were a particular color, in addition to the physical color with which it was printed or displayed on a screen.';\n},{}],22:[function(require,module,exports){\nangular.module('synesim')\n\t.directive('synesimTextEditor', function(synesim) {\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: require('./text-editor.html'),\n\t\t\tscope: {\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t};\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\t\t\tscope.synesim = synesim;\n\t\t}\n\n\t})\n},{\"./text-editor.html\":23}],23:[function(require,module,exports){\nmodule.exports = '<div class=\"text-editor\">\\n\t<textarea ng-model=\"synesim.text\"></textarea>\\n\t<div class=\"text\" synesim-text-renderer\\n\t\ttext=\"synesim.text\"\\n\t\tcolor-map=\"colorMap\"\\n\t></div>\\n</div>';\n},{}],24:[function(require,module,exports){\nvar CssGenerator = require('synesim/css-generator');\nvar HtmlGenerator = require('synesim/html-generator');\n\nangular.module('synesim')\n\t.directive('synesimTextRenderer', function() {\n\n\t\treturn {\n\t\t\ttemplate: '<style type=\"text/css\"></style><div></div>',\n\t\t\tscope: {\n\t\t\t\ttext: '=',\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t};\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\n\t\t\tvar styleEl = iElement.find('style');\n\t\t\tvar divEl = iElement.find('div');\n\t\t\tiElement.addClass('text-renderer');\n\n\t\t\tvar cssGenerator, htmlGenerator;\n\n\t\t\tscope.$watch('colorMap', function() {\n\t\t\t\tif (scope.colorMap) {\n\t\t\t\t\tcssGenerator = new CssGenerator(scope.colorMap, {\n\t\t\t\t\t\tclassPrefix: 'syn'\n\t\t\t\t\t});\n\t\t\t\t\thtmlGenerator = new HtmlGenerator(scope.colorMap, {\n\t\t\t\t\t\tclassPrefix: 'syn'\n\t\t\t\t\t});\n\t\t\t\t\tvar css = cssGenerator.generate();\n\t\t\t\t\tstyleEl.html(css);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.$watchCollection('[text, colorMap]', function() {\n\t\t\t\tif (scope.colorMap && scope.text) {\n\t\t\t\t\tvar html = htmlGenerator.generate(scope.text);\n\t\t\t\t\tdivEl.html(html);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t})\n},{\"synesim/css-generator\":2,\"synesim/html-generator\":4}]},{},[8])\n\n","var _ = require('underscore');\n\nfunction CssGenerator(colorMap, options) {\n\tif (!colorMap) {\n\t\tthrow new Error('CssGenerator must be instantiated with a ColorMap');\n\t}\n\tthis.colorMap = colorMap;\n\tthis.options = _.clone(options || {});\n\t_.defaults(this.options, {\n\t\tclassPrefix: ''\n\t});\n}\n\nCssGenerator.prototype = {\n\tgenerate: generate\n}\n\nfunction generate() {\n\treturn _.map(this.colorMap.graphemes, function(grapheme) {\n\t\tvar className = this.options.classPrefix + grapheme.toLowerCase();\n\t\treturn [\n\t\t\t'.' + className + '{',\n\t\t\t'color:' + this.colorMap.color(grapheme) + ';',\n\t\t\t'}\\n'\n\t\t].join('');\n\t}, this).join('');\n}\n\nmodule.exports = CssGenerator;","var GRAPHEME_STRING = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\nmodule.exports = GRAPHEME_STRING.split('');","var _ = require('underscore');\n\nfunction HtmlGenerator(colorMap, options) {\n\tif (!colorMap) {\n\t\tthrow new Error('HtmlGenerator must be constructed with a ColorMap');\n\t}\n\tthis.colorMap = colorMap;\n\tthis.options = _.clone(options || {});\n\t_.defaults(this.options, {\n\t\tclassPrefix: ''\n\t});\n}\n\nHtmlGenerator.prototype = {\n\tgenerate: generate\n}\n\nfunction generate(text) {\n\treturn _.map(text.split(''), function(char) {\n\t\tif (this.colorMap.color(char)) {\n\t\t\tvar cssClass = this.options.classPrefix + char.toLowerCase();\n\t\t\treturn '<span class=\"' + cssClass + '\">' + char + '</span>';\n\t\t} else {\n\t\t\treturn char;\n\t\t}\n\t}, this).join('');\n}\n\nmodule.exports = HtmlGenerator;","/**\n * Returns query string as object\n */\nfunction query() {\n\tvar qs = window.location.search;\n\tvar obj = {};\n\tif (qs && qs.length > 0) {\n\t\tqs = qs.substring(1); // remove initial '?'\n\t\tvar parts = qs.split('&');\n\t\tparts.forEach(function(part) {\n\t\t\tvar pair = part.split('=');\n\t\t\tobj[pair[0]] = pair[1];\n\t\t});\n\t}\n\treturn obj;\n}\n\nmodule.exports = query;","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","var audit = {\n\tlog: log\n};\n\nfunction log() {\n\tconsole.log('navigator properties:');\n\tconsole.log('* userAgent:', navigator.userAgent);\n\tconsole.log('* platform:', navigator.platform);\n\tconsole.log('* language:', navigator.language);\n}\n\nmodule.exports = audit;","var query = require('util/query'); // include from \"lib\"\nvar audit = require('./audit'); // include locally\n\n// If the query string includes the parameter \"audit\", then write navigator information to console.\nvar q = query();\nif (q.audit) {\n\taudit.log();\n}\n\nrequire('./synesim/synesim.module');","angular.module('synesim')\n\t.directive('synesimColorMapEditor', function(synesim) {\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: require('./color-map-editor.html'),\n\t\t\tscope: {\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t}\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\n\t\t\tscope.$watch('colorMap', function() {\n\t\t\t\t_setCode();\n\t\t\t});\n\n\t\t\tscope.selectGrapheme = function selectGrapheme(grapheme) {\n\t\t\t\tscope.selectedGrapheme = grapheme;\n\t\t\t\tscope.selectedColor = scope.colorMap.color(grapheme);\n\t\t\t};\n\n\t\t\tscope.deselectGrapheme = function deselectGrapheme() {\n\t\t\t\tscope.selectedGrapheme = null;\n\t\t\t\tscope.selectedColor = null;\n\t\t\t\tif (scope.colorMap) {\n\t\t\t\t\tsynesim.colorMap(scope.colorMap);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscope.$watch('selectedColor', function() {\n\t\t\t\tif (scope.selectedColor && scope.selectedGrapheme && scope.colorMap) {\n\t\t\t\t\tscope.colorMap.color(scope.selectedGrapheme, scope.selectedColor);\n\t\t\t\t\t_setCode();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction _setCode() {\n\t\t\t\tif (scope.colorMap) {\n\t\t\t\t\tvar data = scope.colorMap.toData();\n\t\t\t\t\tscope.code = JSON.stringify(data);\n\t\t\t\t} else {\n\t\t\t\t\tscope.code = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t});","module.exports = '<div class=\"color-map-editor\">\\n\t<ul class=\"graphemes\">\\n\t\t<li class=\"grapheme\" \\n\t\t\tng-repeat=\"grapheme in colorMap.graphemes\" \\n\t\t\tng-click=\"selectGrapheme(grapheme)\"\\n\t\t\tng-bind=\"grapheme\"\\n\t\t\tng-style=\"{\\n\t\t\t\tcolor: colorMap.color(grapheme)\\n\t\t\t}\"\\n\t\t\t></li>\\n\t</ul>\\n\t<div class=\"dialog\" ng-show=\"selectedGrapheme\">\\n\t\t<div class=\"dialog__panel\">\\n\t\t\t<color-picker ng-model=\"selectedColor\"></color-picker>\\n\t\t\t<span class=\"grapheme\" \\n\t\t\t\tng-bind=\"selectedGrapheme\"\\n\t\t\t\tng-style=\"{\\n\t\t\t\t\tcolor: selectedColor\\n\t\t\t\t}\"\\n\t\t\t\t></span>\\n\t\t</div>\\n\t\t<button class=\"close\" ng-click=\"deselectGrapheme()\">close</button>\\n\t</div>\\n\t<p>Code:</p>\\n\t<textarea readonly class=\"code\" ng-bind=\"code\"></textarea>\\n\t\\n</div>';","var ColorMap = require('synesim/color-map');\n\nangular.module('synesim')\n\t.service('colorMapLocal', function() {\n\n\t\tthis.read = read;\n\t\tthis.write = write;\n\n\t\t/**\n\t\t * Reads the color map from local storage.\n\t\t * @return {ColorMap} The local color map\n\t\t */\n\t\tfunction read() {\n\t\t\treturn localStorage.colorMap ? ColorMap.fromData(JSON.parse(localStorage.colorMap)) : null;\n\t\t}\n\n\t\t/**\n\t\t * Writes the color map to local storage.\n\t\t */\n\t\tfunction write(colorMap) {\n\t\t\tlocalStorage.colorMap = JSON.stringify(colorMap.toData());\n\t\t}\n\n\t});","angular.module('synesim')\n\t.directive('synesimColorMapPreview', function() {\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: require('./color-map-preview.html'),\n\t\t\tscope: {\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t};\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\n\t\t}\n\n\t});","module.exports = '<div class=\"color-map-preview\">\\n\\n<ul>\\n<li ng-repeat=\"grapheme in colorMap.graphemes\">\\n\t<span ng-bind=\"grapheme\"\\n\t\tng-style=\"{\\n\t\t\tcolor: colorMap.color(grapheme)\\n\t\t}\"\\n\t></span>\\n</li>\\n</ul>\\n\\n</div>';","var ColorMap = require('synesim/color-map');\n\nangular.module('synesim')\n\t.service('colorMapRemote', function($q, $http) {\n\n\t\tthis.read = read;\n\n\t\t/**\n\t\t * Reads the color map data from remote resource.\n\t\t * @return {Promise} The promise resolving to ColorMap\n\t\t */\n\t\tfunction read() {\n\t\t\tif (!this.endpoint) {\n\t\t\t\treturn $q.reject(new Error('unable to read remote color map data without endpoint'));\n\t\t\t}\n\t\t\treturn $http({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: this.endpoint,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\taccept: 'application/json'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(function(r) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn ColorMap.fromData(r.data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn $q.reject(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t})","module.exports = '<h1>Synesthesia Simulator</h1>\\n\\n<nav>\\n\t<ul>\\n\t\t<li>\\n\t\t\t<a ui-sref=\"main.text-editor\"\\n\t\t\t\tui-sref-active-eq=\"active\"\\n\t\t\t\t>edit text</a>\\n\t\t</li>\\n\t\t<li>\\n\t\t\t<a ui-sref=\"main.color-editor\" \\n\t\t\t\tui-sref-active-eq=\"active\"\\n\t\t\t\t>edit colors</a>\\n\t\t</li>\\n\t</ul>\\n</nav>\\n\\n<ui-view>\\n\t<synesim-color-map-preview\\n\t\tcolor-map=\"colorMap\"\\n\t></synesim-color-map-preview>\\n</ui-view>\\n';","var _ = require('underscore');\n\nangular.module('synesim')\n\t.config(function($provide, $logProvider, $urlRouterProvider, $stateProvider) {\n\n\t\t//$logProvider.debugEnabled(false);\n\n\t\t$provide.decorator('synesim', function($delegate) {\n\t\t\treturn _.extend($delegate, {\n\t\t\t\ttext: require('./text-default.html')\n\t\t\t});\n\t\t});\n\n\t\t$provide.decorator('colorMapRemote', function($delegate) {\n\t\t\treturn _.extend($delegate, {\n\t\t\t\tendpoint: '/assets/misc/json/color-map.json',\n\t\t\t});\n\t\t});\n\n\t\t$stateProvider\n\t\t\t.state('main', {\n\t\t\t\turl: '/',\n\t\t\t\ttemplate: require('./main.html'),\n\t\t\t\tcontroller: 'synesimController'\n\t\t\t})\n\t\t\t.state('main.color-editor', {\n\t\t\t\turl: 'color-editor',\n\t\t\t\ttemplate: '<synesim-color-map-editor color-map=\"colorMap\"></synesim-color-map-editor>'\n\t\t\t})\n\t\t\t.state('main.text-editor', {\n\t\t\t\turl: 'text-editor',\n\t\t\t\ttemplate: '<synesim-text-editor color-map=\"colorMap\"></synesim-text-editor>'\n\t\t\t});\n\n\t\t$urlRouterProvider.otherwise('/text-editor');\n\n\t});","angular.module('synesim')\n\t.controller('synesimController', function($log, $scope, synesim) {\n\n\t\tsynesim.colorMap()\n\t\t\t.then(function(r) {\n\t\t\t\t$scope.colorMap = r;\n\t\t\t}, function(e) {\n\t\t\t\t$log.error('unable to load color map', e);\n\t\t\t});\n\n\t});","angular.module('synesim', ['ui.router', 'mp.colorPicker']);\n\nrequire('./synesim.config');\nrequire('./synesim.run');\nrequire('./synesim.controller');\nrequire('./synesim.service');\nrequire('./color-map-remote.service');\nrequire('./color-map-local.service');\nrequire('./color-map-preview.directive');\nrequire('./color-map-editor.directive');\nrequire('./text-renderer.directive');\nrequire('./text-editor.directive');","angular.module('synesim')\n\t.run(function($log) {\n\t\t$log.debug('synesim');\n\t})","var ColorMap = require('synesim/color-map');\n\nangular.module('synesim')\n\t.service('synesim', function($q, colorMapRemote, colorMapLocal) {\n\n\t\tthis.colorMap = colorMap;\n\n\t\tfunction colorMap(value) {\n\t\t\tif (value) {\n\t\t\t\tcolorMapLocal.write(value);\n\t\t\t}\n\t\t\tvar localValue = colorMapLocal.read();\n\t\t\tif (localValue) {\n\t\t\t\treturn $q.when(localValue);\n\t\t\t} else {\n\t\t\t\treturn colorMapRemote.read()\n\t\t\t\t\t.then(function(r) {\n\t\t\t\t\t\tcolorMapLocal.write(r);\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t});","module.exports = 'Grapheme-color synesthesia is a condition causing a person to experience each symbol (character of the alphabet and digit) as though it were a particular color, in addition to the physical color with which it was printed or displayed on a screen.';","angular.module('synesim')\n\t.directive('synesimTextEditor', function(synesim) {\n\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplate: require('./text-editor.html'),\n\t\t\tscope: {\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t};\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\t\t\tscope.synesim = synesim;\n\t\t}\n\n\t})","module.exports = '<div class=\"text-editor\">\\n\t<textarea ng-model=\"synesim.text\"></textarea>\\n\t<div class=\"text\" synesim-text-renderer\\n\t\ttext=\"synesim.text\"\\n\t\tcolor-map=\"colorMap\"\\n\t></div>\\n</div>';","var CssGenerator = require('synesim/css-generator');\nvar HtmlGenerator = require('synesim/html-generator');\n\nangular.module('synesim')\n\t.directive('synesimTextRenderer', function() {\n\n\t\treturn {\n\t\t\ttemplate: '<style type=\"text/css\"></style><div></div>',\n\t\t\tscope: {\n\t\t\t\ttext: '=',\n\t\t\t\tcolorMap: '='\n\t\t\t},\n\t\t\tlink: postLink\n\t\t};\n\n\t\tfunction postLink(scope, iElement, iAttributes) {\n\n\t\t\tvar styleEl = iElement.find('style');\n\t\t\tvar divEl = iElement.find('div');\n\t\t\tiElement.addClass('text-renderer');\n\n\t\t\tvar cssGenerator, htmlGenerator;\n\n\t\t\tscope.$watch('colorMap', function() {\n\t\t\t\tif (scope.colorMap) {\n\t\t\t\t\tcssGenerator = new CssGenerator(scope.colorMap, {\n\t\t\t\t\t\tclassPrefix: 'syn'\n\t\t\t\t\t});\n\t\t\t\t\thtmlGenerator = new HtmlGenerator(scope.colorMap, {\n\t\t\t\t\t\tclassPrefix: 'syn'\n\t\t\t\t\t});\n\t\t\t\t\tvar css = cssGenerator.generate();\n\t\t\t\t\tstyleEl.html(css);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.$watchCollection('[text, colorMap]', function() {\n\t\t\t\tif (scope.colorMap && scope.text) {\n\t\t\t\t\tvar html = htmlGenerator.generate(scope.text);\n\t\t\t\t\tdivEl.html(html);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t})"],"sourceRoot":"/source/"}